apply plugin: 'com.android.application'

android {
    signingConfigs {
        release
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        signingConfig signingConfigs.release
    }
    buildTypes {
        release {
            minifyEnabled
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/NOTICE'
    }

    def Properties props = new Properties()
    def homePath = System.properties['user.home']
    def propFile = new File(homePath, '.gradle/gradle.properties')
    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))
        if (props != null && props.containsKey('STORE_FILE') &&
                props.containsKey('STORE_PASSWORD') &&
                props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        } else {
            println 'signing.properties found but some entries are missing'
            android.buildTypes.release.signingConfig = null
        }
    } else {
        println 'signing.properties not found'
        android.buildTypes.release.signingConfig = null
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    wearApp project(':wear')
    compile 'com.google.android.gms:play-services-wearable:+'
    compile 'com.android.support:appcompat-v7:20.+'
    compile 'com.loopj.android:android-async-http:1.4.4'
    //compile 'org.java-websocket:Java-WebSocket:1.+'
    //compile 'javax.jmdns:jmdns:3.+'
    compile project(':com_example_google_tv_anymotelibrary')
    //compile files('libs/classes.jar')
    // Second screen library
    //compile project(':secondscreen-library')
    compile(name: 'lib-bbox-secondscreen-0.3.1-SNAPSHOT-debug', ext: 'aar')
    // Following libs are required for secondscreen lib at runtime
    compile 'org.java-websocket:Java-WebSocket:1.3.0'
    compile 'com.github.rickyclarkson:jmdns:3.4.2-r353-1'
    compile 'com.squareup.retrofit:retrofit:1.8.0'
}
